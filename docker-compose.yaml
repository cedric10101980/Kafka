version: '2.2'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    hostname: mongodb
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - mongodb-data:/data/db/
      - mongodb-log:/var/log/mongodb/
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    command: ["mongod", "--bind_ip_all"] # Allow connections from all IPs
    ports:
      - "27017:27017"
    networks:
      - spring-kafka-network

  kafka:
    image: 'bitnami/kafka:3.4'
    container_name: kafka-broker

    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - ALLOW_PLAINTEXT_LISTENER=yes

      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_LISTENERS=CLIENT://:29092,EXTERNAL://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:29092,EXTERNAL://localhost:9092
      #Identify all other controllers in the cluster
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093

    ports:
      - '9092:9092'

    networks:
      - spring-kafka-network

  app:
    image: cedric10101980/kafka-mongodb-app:latest
    container_name: app
    ports:
      - "8081:8080"
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongo:mongo@mongodb:27017/mongo-db
    depends_on:
      - mongodb
      - kafka
    networks:
      - spring-kafka-network
volumes:
  mongodb-data:
    driver: local
    name: mongo-data
  mongodb-log:
    driver: local
    name: mongo-log

networks:
  spring-kafka-network:
    driver: bridge
    name: spring-kafka-network


